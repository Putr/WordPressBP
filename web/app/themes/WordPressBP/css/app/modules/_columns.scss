/*
 * Split any wrapping container into columns
 *
 * ```
 * // Split into 2 columns which will stack on medium screens.
 * <div class="columns halves stack-m">
 *   <div class="column">1/2</div>
 *   <div class="column">1/2</div>
 * </div>
 *
 * OR
 *
 * // Split in 5 columns but have the 4th column take up the space of 2. Stack on small screens.
 * <div class="columns fifths stack-s">
 *   <div class="column">1/5</div>
 *   <div class="column">1/5</div>
 *   <div class="column double">2/5</div>
 *   <div class="column">1/5</div>
 * </div>
 * ```
 */

// Main columns definitions
.columns {
  margin-left: $gutter-width/-2;
  margin-right: $gutter-width/-2;

  // Clearfix
  &:before, &:after { content: ""; display: table; }
  &:after { clear: both; }

  // Single column defaults
  > .column {
    box-sizing: border-box;
    float: left;
    padding-left: $gutter-width/2;
    padding-right: $gutter-width/2;
  }

  // Fraction definitions
  &.halves > .column {
    width: pc(1,2);
  }

  &.thirds > .column {
    width: pc(1,3);
    &.double { width: pc(2,3); }
  }

  &.quarters > .column {
    width: pc(1,4);
    &.double { width: pc(2,4); }
    &.triple { width: pc(3,4); }
  }

  &.fifths > .column {
    width: pc(1,5);
    &.double { width: pc(2,5); }
    &.triple { width: pc(3,5); }
    &.quadra { width: pc(4,5); }
  }

  &.sixths > .column {
    width: pc(1,6);
    &.double { width: pc(2,6); }
    &.triple { width: pc(3,6); }
    &.quadra { width: pc(4,6); }
    &.penta  { width: pc(5,6); }
  }

  // Need to split into more columns? Simply repeat the pattern.
}

// Responsive behavior
@media (max-width: $breakpoint-l) { .stack-l > .column { width: 100% !important; } }
@media (max-width: $breakpoint-m) { .stack-m > .column { width: 100% !important; } }
@media (max-width: $breakpoint-s) { .stack-s > .column { width: 100% !important; } }
